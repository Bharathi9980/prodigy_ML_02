import numpy as np
import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# Generating a sample dataset
data = {
    'CustomerID': range(1, 101),
    'Total_Purchases': np.random.randint(1, 100, 100),
    'Total_Spent': np.random.uniform(100, 5000, 100)
}

# Convert the data to a DataFrame
df = pd.DataFrame(data)

# Display the first few rows
print(df.head())

# Preprocessing: Standardize the data
scaler = StandardScaler()
df_scaled = scaler.fit_transform(df[['Total_Purchases', 'Total_Spent']])

# Apply K-means clustering
kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(df_scaled)

# Display the clustered data
print(df.head())

# Visualize the clusters
plt.figure(figsize=(10, 6))
sns.scatterplot(x='Total_Purchases', y='Total_Spent', hue='Cluster', data=df, palette='Set1')
plt.title('Customer Segmentation based on Purchase History')
plt.xlabel('Total Purchases')
plt.ylabel('Total Spent')
plt.show()

# Interpretation of clusters
cluster_summary = df.groupby('Cluster').mean()
print(cluster_summary)
